@page "/product-details"
@inject HttpClient Http

<h3>Products</h3>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (hasError)
{
    <p style="color: red;">An error occurred while fetching the products. Please try again later.</p>
}
else if (products == null || !products.Any())
{
    <p>No products found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Name</td
                    <td>@product.Price</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product>? products;
    private bool isLoading = true;
    private bool hasError = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Console.WriteLine("Fetching products from API...");
            products = await Http.GetFromJsonAsync<List<Product>>("Products");
            Console.WriteLine($"Fetched {products?.Count ?? 0} products.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching products: {ex.Message}");
            hasError = true; // Hata durumunu işaretle
        }
        finally
        {
            isLoading = false; // Yükleme tamamlandı
        }
    }

    // Product sınıfı
    public class Product
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public double Price { get; set; }
    }
}